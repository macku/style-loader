// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"esModule" option should work and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================
EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
    color: red;
}

.bar {
    color: blue;
}

.baz {
    color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
============================
EXPORTS:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;
